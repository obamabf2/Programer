ALTER PROCEDURE [dbo].[Programer_Day]
	@in_token varchar(32)
AS
BEGIN
	SET NOCOUNT ON;
	
	-- search for that lock
	declare @CustomerID int
	declare @IP varchar(32)
	declare @Country varchar(32)
	select @CustomerID=CustomerID, @IP=IP, @Country=Country from AccountLocks where Token=@in_token and IsUnlocked=0
	if(@@ROWCOUNT = 0) begin
		select 6 as ResultCode, 'bad token' as ResultMsg
		return
	end
	
	-- unlock account
	declare @AccAccountStatus int = 0
	select @AccAccountStatus=AccountStatus from Accounts where CustomerID=@CustomerID
	if(@@ROWCOUNT = 0) begin
		select 6 as ResultCode, 'account not found' as ResultMsg
		return
	end
	if(@AccAccountStatus <> 102) begin
		select 6 as ResultCode, 'account not locked' as ResultMsg
		return
	end
	
	-- unlock
	update Accounts set AccountStatus=100, lastloginIP=@IP, lastloginCountry=@Country where CustomerID=@CustomerID
	update AccountLocks set IsUnlocked=1, UnlockTime=GETDATE() where Token=@in_token
	
	-- decouple IP, create class B network
	declare @ip1 varchar(32)	-- last login ip 'X.y.z.w'
	declare @ip2 varchar(32)	-- last login ip 'x.Y.z.w'
	declare @n1 int
	declare @n2 int
	set @n1  = charindex('.', @IP)
	set @ip1 = substring(@IP, 1, @n1 - 1)
	set @n2  = charindex('.', @IP, @n1 + 1)
	set @ip2 = substring(@IP, @n1 + 1, @n2 - 1 - @n1)

	-- whitelist that network
	declare @Network varchar(32) = @ip1 + '.' + @ip2
	insert into AccountIpWhitelist values (@CustomerID, GETDATE(), @Network, @Country)

	select 0 as ResultCode
	return
	
END

